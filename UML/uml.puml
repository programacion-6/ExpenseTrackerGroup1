@startuml
scale 0.75
package "Model" {
    class User{
        +Name: String
        +Email: String
        +PasswordHash: String
        +CreatedAt: DateTime
    }

    class Expense {
        +UserId: Guid
        +Amount: double
        +Description: String
        +Category: String
        +Date: DateTime
        +CreatedAt: DateTime
    }

    class Income {
        +UserId: Guid
        +Amount: double
        +Source: String
        +Date: DateTime
        +CreatedAt: DateTime
    }

    class Insight {
        +ExpenseId: Guid
        +IncomeId : Guid
    }

    class Budget {
        +UserId: Guid
        +Month: DateTime
        +BudgetAmount: double
    }

    class Goal {
        +UserId: Guid
        +GoalAmount: double
        +Deadline: DateTime
        +CurrentAmount: double
        +CreatedAt: DateTime
    }

}

package Helpers {
    class QueryObject {
        +SortBy : String?
        +IsDescending : bool
        +PageNumber : int
        +PageSize : int
    }
}

package Interfaces {

    interface IEntity {
        +Id: Guid
    }

    interface IDto<T> {
        + getDto() : T
    }

    package CrudOperations {
        interface ICreateOperation<T where T : IEntity> {
            +CreateEntity(T entityModel): Task<T>
        }

        interface IDeleteOperation<T where T : IEntity> {
            +DeleteEntity(Guid entityId): Task<T?>
        }

        interface IReadOperation<T where T : IEntity> {
            +ReadEntity(Guid entityId): Task<T?>
        }

        interface IUpdateOperation<T where T : IEntity> {
            +UpdateEntity(Guid entityId, IDto entityDto): Task<T?>
        }

        interface IGetAllOperation<T where T : IEntity> {
            +GetAllEntities(QueryObject query): Task<List<T>>
        }
    }

    interface IEmailService {
        +SendEmail(): Task<bool>
    }

    interface IAuthRepository {
        +Login(): Task<String?>
        +ResetPassword(): Task<bool>
    }

    interface IInsightRepository {
        +GetSummaryByMonth(DateTime month) : Insight
    }

    interface ITokenService {
        +CreateToken(User user): String
    }

    interface IExpenseRepository {

    }

    interface IIncomeRepository {

    }

    interface IBudgetRepository {

    }

    interface IGoalRepository {

    }

    IAuthRepository --|> ICreateOperation 
    IAuthRepository --|> IUpdateOperation 

    IExpenseRepository --|> ICreateOperation
    IExpenseRepository --|> IReadOperation 
    IExpenseRepository --|> IUpdateOperation 
    IExpenseRepository --|> IDeleteOperation
    IExpenseRepository --|> IGetAllOperation 

    IIncomeRepository --|> ICreateOperation
    IIncomeRepository --|> IReadOperation 
    IIncomeRepository --|> IUpdateOperation 
    IIncomeRepository --|> IDeleteOperation 
    IIncomeRepository --|> IGetAllOperation 

    IBudgetRepository --|> ICreateOperation
    IBudgetRepository --|> IReadOperation 

    IGoalRepository --|> ICreateOperation
    IGoalRepository --|> IReadOperation 

} 

package Dtos {
    package AuthDtos {
        class LoginDto {
            +Username: String
            +Password: String
        }
        class NewUserDto {
            +Username: String
            +Email: String
            +Token: String
        }
        class RegisterDto {
            +Username: String?
            +Email: String?
            +Password: String?
        }
        class UpdateUserDto {
            +Name: String
            +Email: String
            +Password: String
        }
    }

    package ExpenseDtos {
        class ExpenseDto {
            +UserId: Guid
            +Amount: double
            +Description: String
            +Category: String
            +Date: DateTime
            +CreatedAt: DateTime
        }
        class UpdateExpenseDto {
            +Amount: double
            +Description: String
            +Category: String
            +Date: DateTime
        }
    }

    package IncomeDtos {
        class IncomeDto {
            +UserId: Guid
            +Amount: double
            +Source: String
            +Date: DateTime
            +CreatedAt: DateTime
        }
        
        class UpdateIncomeDto{
            +Amount: double
            +Source: String
            +Date: DateTime
        }
    }

    package BudgetDtos {
        class BudgetDto {
            +UserId: Guid
            +Month: DateTime
            +BudgetAmount: double
        }
    }

    package GoalDtos {
        class GoalDto {
            +UserId: Guid
            +GoalAmount: double
            +Deadline: DateTime
            +CurrentAmount: double
            +CreatedAt: DateTime
        }
    }
}

LoginDto --|> IDto
GoalDto --|> IDto
BudgetDto --|> IDto
UpdateIncomeDto --|> IDto
IncomeDto --|> IDto
UpdateExpenseDto --|> IDto
ExpenseDto --|> IDto
UpdateUserDto --|> IDto
RegisterDto --|> IDto
NewUserDto --|> IDto



package Service {

    class EmailService {
        +SetEmail():String
    }

    class TokenService {
        -_config: IConfiguration
        -_key: SymmetricSecurityKey
    }

}

package Repository {

    class AuthRepository {
        
    }

    class InsightRepository {
        
    }

    class ExpenseRepository {

    }

    class IncomeRepository {

    }

    class BudgetRepository {

    }

    class GoalRepository {

    }

}

package Controllers {
    class AuthController {
        +AuthRepository: IAuthRepository
        +TokenService: ITokenService
        +EmailService: IEmailService
        +Login(LoginDto lodingDto)
        +Register(RegisterDto registerDto)
        +ResetPassword(UpdateUserDto updateUserDto)
    }

    class ExpenseController {
        +ExpenseRepository: IExpenseRepository
        +Create(ExpenseDto dto)
        +Delete(ExpenseDto dto)
        +Update(ExpenseDto dto)
        +Delete(ExpenseDto dto)
    }

    class IncomeController {
        +IncomeRepository: IIncomeRepository
        +Create(IncomeDto dto)
        +Delete(IncomeDto dto)
        +Update(IncomeDto dto)
        +Delete(IncomeDto dto)
    }

    class BudgetController {
        +BudgetRepository: IBudgetRepository
        +Create(BudgetDto dto)
        +Read(BudgetDto dto)
    }

    class GoalController {
        +GoalRepository: IGoalRepository
        +Create(GoalDto dto)
        +Read(GoalDto dto)
    }

    class InsightController {
        +InsightRepository: IInsightRepository
        +GetInsightByMonth(DateTime time)
    }
}

User --|> IEntity
Insight --|> IEntity
Expense --|> IEntity
Income --|> IEntity
Budget --|> IEntity
Goal --|> IEntity

EmailService --|> IEmailService
TokenService --|> ITokenService

AuthRepository --|> IAuthRepository
InsightRepository --|> IInsightRepository
ExpenseRepository --|> IExpenseRepository
IncomeRepository --|> IIncomeRepository
BudgetRepository --|> IBudgetRepository
GoalRepository --|> IGoalRepository

AuthController ..> AuthRepository
InsightController ..> InsightRepository
ExpenseController ..> ExpenseRepository
IncomeController ..> IncomeRepository
BudgetController..> BudgetRepository
GoalController..> GoalRepository


@enduml